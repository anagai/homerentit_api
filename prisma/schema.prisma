generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model amenity {
  id               String             @id @db.Char(36)
  name             String?            @db.VarChar(100)
  property_amenity property_amenity[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model property {
  id               String             @id @db.VarChar(36)
  description      String?            @db.VarChar(1000)
  city             String?            @db.VarChar(100)
  state            String?            @db.Char(2)
  area_info        String?            @db.VarChar(1000)
  max_guests       Int?
  price            Decimal?           @db.Decimal(8, 2)
  property_amenity property_amenity[]
  property_room    property_room[]
}

model property_amenity {
  property_id String   @db.Char(36)
  amenity_id  String   @db.Char(36)
  amenity     amenity  @relation(fields: [amenity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_amenity")
  property    property @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_property")

  @@id([property_id, amenity_id], map: "prop_amen_key")
}

model property_room {
  property_id String   @db.Char(36)
  room_id     String   @db.Char(36)
  room_count  Int?     @db.SmallInt
  property    property @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_property")
  room        room     @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_room")

  @@id([property_id, room_id], map: "prop_room_key")
}

model room {
  id            String          @id @db.Char(36)
  name          String?         @db.VarChar(50)
  property_room property_room[]
}
